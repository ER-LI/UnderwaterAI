from propeller import Propeller
from water_depth_sensor import WaterDepthSensor


import time
import board
import busio
import adafruit_ads1x15.ads1015 as ADS
from adafruit_ads1x15.analog_in import AnalogIn
from adafruit_ads1x15.ads1x15 import Mode
class UwBot():

    def __init__(self):
        # Init GPIO
        self.__propeller = Propeller()

        # int DHT11
        pass

    def move(self,direction,speed):
        '''
        direction list = ['FORWARD', 'BACKWARD']
        speed must in range [0,100]
        '''
        Propeller.__init__(self)
        now_speed_clockwise = 83.55 * ((101 - speed) / 100)
        now_speed_counterclockwise = 180 - 83.55 * ((101 - speed) / 100)
        if direction == 'FORWARD':
         
            self.__propeller.move_forward(now_speed_clockwise)
        
        elif direction == 'BAKCWORD':

            self.__propeller.move_backward(now_speed_counterclockwise)
            
        elif direction == 'left':
            self.__propeller.move_left(now_speed_clockwise,now_speed_counterclockwise)

        elif direction == 'right':
            self.__propeller.move_right(now_speed_clockwise,now_speed_counterclockwise)

        elif direction == 'up':
            water_depth = WaterDepthSensor.read_water_depth()
            self.__propeller.move_up(now_speed_clockwise,water_depth)
        
        elif direction == 'down' :
            water_depth = WaterDepthSensor.read_water_depth()
            print(water_depth)
            self.__propeller.move_down(now_speed_counterclockwise,water_depth)
            
        elif direction == 'turn_left':
            self.__propeller.turn_left(now_speed_clockwise,now_speed_counterclockwise)

        elif direction == 'turn_right':
            self.__propeller.turn_right(now_speed_clockwise,now_speed_counterclockwise)
    
    def start_all_cameras(self):
        pass

    def read_room_humidity(self):
        pass

    def read_room_temperature(self):
        pass

    def read_user_button(self):
        pass


    def read_distance_to_bottom(self):
        pass

    def read_water_depth(self):
        pass

    def read_battery(self):
        '''
        range is [0,100]
        '''
        ads1015_address = 0x48

        i2c_bus1 = (busio.I2C(board.SCL_1, board.SDA_1,frequency=100000))

        ads = ADS.ADS1015(i2c_bus1,address=ads1015_address )

        chan = AnalogIn(ads, ADS.P1)

        percent =(1 - (chan.voltage - 2.55)/-0.35) * 100   
        return percent

    def spin(self):
        while True:
            v = UwBot.read_battery(self)
            if v < 20:
                self.__propeller.move_up(20, 0)
                



if __name__ == '__main__':
    '''
    The speed must be in range (1 , 100)
    '''
    UwBot.move('FORWARD', 20)
